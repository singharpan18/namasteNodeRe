*****lec6*****
Create a free cluster on MongoDB official website (Mongo Atlas)
Install mongoose library
Connect your application to the Database "Connection-url"/devTinder
Call the connectDB function and connect to database before starting application on 7777
Create a userSchema & user Model
Create POST /sigup API to add data to database
Push some documents using API calls from postman
Error Handling using try , catch

*****lec7****
JS object vs JSON (difference)
Add the express.json middleware to your app
Make your signup API dynamic to recive data from the end user
User.findOne with duplucate email ids, which object returned
API- Get user by email
API - Feed API - GET /feed - get all the users from the database
API - Get user by ID
Create a delete user API
Difference between PATCH and PUT
API - Update a user
Explore the Mongoose Documention for Model methods
What are options in a Model.findOneAndUpdate method, explore more about it
API - Update the user with email ID

*****lec8****
Explore schematype options from the documention
add required, unique, lowercase, min, minLength, trim
Add default
Create a custom validate function for gender
Improve the DB schema - PUT all appropiate validations on each field in Schema
Add timestamps to the userSchema
Add API level validation on Patch request & Signup post api
DATA Sanitizing - Add API validation for each field
Install validator
Explore validator library funcation and Use vlidator funcs for password, email, photoURL

*****lec9*****
NEVER TRUST req.body
Validate data in Signup API
Install bcrypt package
Create PasswordHash using bcrypt.hash & save the user is excrupted password
Create login API
Compare passwords and throw errors if email or password is invalid

*****lec10*****
install cookie-parser
just send a dummy cookie to user
create GET /profile APi and check if you get the cookie back
install jsonwebtoken
IN login API, after email and password validation, create e JWT token and send it to user in cookies
read the cookies inside your profile API and find the logged in user
userAuth Middleware
Add the userAuth middle ware in profile API and a new sendConnectionRequest API
Set the expiry of JWT token and cookies to 7 days
Create userSchema method to getJWT()
Create UserSchema method to comparepassword(passwordInputByUser)







